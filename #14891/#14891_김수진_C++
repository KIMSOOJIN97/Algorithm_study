#include <iostream>
#include <stdio.h>

using namespace std;

int wheel[4][8] = { 0 };
int rotate_wheel[4][8] = { 0 };
int num, direction;


void rotation_right(int num1) // 시계 방향
{
   int temp = wheel[num1][7];
   for (int i = 7; i > 0; i--)
      rotate_wheel[num1][i] = wheel[num1][i - 1];
   rotate_wheel[num1][0] = temp;
   direction = -1;

}

void rotation_left(int num1) //반시계방항
{
   int temp = wheel[num1][0];
   for (int i = 6; i >= 0; i--)
      rotate_wheel[num1][i] = wheel[num1][i + 1];
   rotate_wheel[num1][7] = temp;
   direction = 1;

}

void rotate(int num1, int dir)
{
   if (dir == 1)   rotation_right(num1);
   else rotation_left(num1);
}

int main(void)
{
   int t_dir;
   int temp;

   for (int i = 0; i < 4; i++) {
      for (int j = 0; j < 8; j++) {
         scanf("%1d", &wheel[i][j]);
         rotate_wheel[i][j] = wheel[i][j];
      }
   }

   int k; // number of testcase
   cin >> k;

   for (int i = 0; i < k; i++) {

      cin >> num >> direction;
      t_dir = direction;
      rotate(num - 1, direction);

      if (direction == 1) t_dir = -1;
      else t_dir = 1;

      if (num == 1)
      {
         temp = 0;
         while (1) {
            if (wheel[temp][2] == wheel[temp + 1][6])   break;
            if (temp == 3)   break;
            rotate(temp + 1, direction);
            temp++;
         }
      }

      else if (num == 4) {

         temp = 3;
         while (1) {
            if (wheel[temp][6] == wheel[temp - 1][2])   break;
            if (temp == 0)   break;
            rotate(temp - 1, direction);
            temp--;
         }
      }

      else if (num == 2) {
         temp = 1;
         while (1) {
            if (wheel[temp][2] == wheel[temp + 1][6])   break;
            if (temp == 3)   break;
            rotate(temp + 1, direction);
            temp++;

         }

         if (wheel[0][2] != wheel[1][6])
         {
            if (t_dir == 1)
               rotation_left(0);
            else
               rotation_right(0);
         }

      }

      else if (num == 3) {
         temp = 2;

         while (1) {
            if (wheel[temp][6] == wheel[temp - 1][2])   break;
            if (temp == 0)   break;
            rotate(temp - 1, direction);
            temp--;

         }

         if (wheel[2][2] != wheel[3][6])
         {
            if (t_dir == 1)
               rotation_left(3);
            else
               rotation_right(3);
         }

      }

      for (int i = 0; i < 4; i++) {
         for (int j = 0; j < 8; j++) {
            wheel[i][j] = rotate_wheel[i][j];
         }
      }
   }

   int sum = 0;
   if (rotate_wheel[0][0] == 1)   sum += 1;
   if (rotate_wheel[1][0] == 1)   sum += 2;
   if (rotate_wheel[2][0] == 1)   sum += 4;
   if (rotate_wheel[3][0] == 1)   sum += 8;

   cout << sum << endl;

   return 0;
}

