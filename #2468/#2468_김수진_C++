#include <iostream>

using namespace std;

int height[100][100];
int arr[100][100];
int max_area = 0;
int N; //size of array
int cnt = 0;


int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,1,0,-1 };

void DFS(int x, int y)
{
    arr[x][y] = 0;

    for (int i = 0; i < 4; i++)
    {
        int ny = y + dy[i];
        int nx = x + dx[i];

        if (nx >= 0 && ny >= 0 && nx < N && ny < N && arr[nx][ny] == 1)
            DFS(nx, ny);
    }
}

int main(void)
{
    cin >> N;

    int max = 0;

    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++) {
            cin >> height[i][j];

            if (height[i][j] > max)
                max = height[i][j];

        }

    }


    for (int i = 0; i < max; i++)
    {
        for (int j = 0; j < N; j++)
        {
            for (int k = 0; k < N; k++) {
                if (height[j][k] > i)
                    arr[j][k] = 1;
                else
                    arr[j][k] = 0;
            }
        }
        cnt = 0;
        for (int j = 0; j < N; j++)
        {
            for (int k = 0; k < N; k++) {
                if (arr[j][k] == 1) {
                    DFS(j, k);
                    cnt++;
                }
            }
        }
        if (max_area < cnt)
            max_area = cnt;
    }

    cout << max_area << "\n";

    return 0;
}
